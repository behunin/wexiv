set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")

if (APPLE)
    # On Apple, we use the conan cmake_paths generator
    if (EXISTS ${CMAKE_BINARY_DIR}/conan_paths.cmake)
        include(${CMAKE_BINARY_DIR}/conan_paths.cmake)
    endif()
else()
    # Otherwise, we rely on the conan cmake_find_package generator
    list(APPEND CMAKE_MODULE_PATH ${CMAKE_BINARY_DIR})
    list(APPEND CMAKE_PREFIX_PATH ${CMAKE_BINARY_DIR})
endif()

find_package (Python3 COMPONENTS Interpreter)

# don't use Frameworks on the Mac (#966)
if (APPLE)
     set(CMAKE_FIND_FRAMEWORK NEVER)
endif()

if(EXIV2_ENABLE_PNG)
    find_package(ZLIB QUIET)
    if(ZLIB_FOUND)
        set(ZLIB_LIBRARIES ZLIB::ZLIB)
    else()
        message(STATUS "ZLIB not found, falling back to externals")
        set(ZLIB_LIBRARY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libz.a)
        set(ZLIB_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/externals/zlib/")
        find_package(ZLIB::ZLIB REQUIRED)
    endif()
endif( )

if( EXIV2_ENABLE_WEBREADY )
    if( EXIV2_ENABLE_CURL )
        find_package(CURL REQUIRED)
    endif()
endif()

find_package(EXPAT MODULE QUIET)
if(EXPAT_FOUND)
    message(STATUS "EXPAT found")
else()
    message(STATUS "EXPAT not found, falling back to externals")
    set(EXPAT_LIBRARY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libexpat.a)
    set(EXPAT_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/externals/libexpat/expat/lib")
    find_package(EXPAT REQUIRED)        
endif()

find_package(XmpSdk QUIET)
if(XmpSdk_Found)
    message(STATUS "XmpSdk found")
else()
    message(STATUS "XmpSdk not found, falling back to externals")
    set(XMPSDK_LIBRARY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libstaticXMPCore.a)
    set(XMPSDK_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/externals/xmp/public/include")
    message(STATUS "XMP_LIB: " ${XMPSDK_LIBRARY})
    message(STATUS "XMP_INCLUDE_DIR: " ${XMPSDK_INCLUDE_DIR})
endif()

if (EXIV2_ENABLE_NLS)
    find_package(Intl REQUIRED)
endif( )

find_package(Iconv)
if( ICONV_FOUND )
    message ( "-- ICONV_INCLUDE_DIR : " ${Iconv_INCLUDE_DIR} )
    message ( "-- ICONV_LIBRARIES : " ${Iconv_LIBRARY} )
endif()

if( BUILD_WITH_CCACHE )
    find_program(CCACHE_FOUND ccache)
    if(CCACHE_FOUND)
        message(STATUS "Program ccache found")
        set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
        set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
    endif()
endif()

